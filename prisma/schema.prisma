// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// Better Auth models
model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified Boolean  @default(false)
  image         String?
  password      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  accounts Account[]
  sessions Session[]

  @@map("user")
}

model Account {
  id                    String    @id @default(cuid())
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, accountId])
  @@map("account")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, value])
  @@map("verification")
}

// Modelos do ERD
model ZonaEmissao {
  idZonaEmissao Int    @id @default(autoincrement())
  nome          String @unique
  descricao     String

  abrigos    Abrigo[]
  emissores  Emissor[]
  receptores Receptor[]
}

model Abrigo {
  idAbrigo  Int    @id @default(autoincrement())
  latitude  Float
  longitude Float
  nome      String
  descricao String

  idZonaEmissao Int
  zonaEmissao   ZonaEmissao @relation(fields: [idZonaEmissao], references: [idZonaEmissao])
}

model Emissor {
  id              Int      @id @default(autoincrement())
  descricao       String
  latitude        Float
  longitude       Float
  valorAlerta     Float
  valorEmergencia Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  idZonaEmissao Int         @unique
  zonaEmissao   ZonaEmissao @relation(fields: [idZonaEmissao], references: [idZonaEmissao])
}

model Receptor {
  id        Int      @id @default(autoincrement())
  descricao String
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  idZonaEmissao Int
  zonaEmissao   ZonaEmissao @relation(fields: [idZonaEmissao], references: [idZonaEmissao])
}
